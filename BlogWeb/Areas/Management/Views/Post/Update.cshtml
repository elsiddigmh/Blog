@using System.Security.Claims
@model BlogWeb.Models.VM.PostUpdateVM;

<!-- Display general errors -->
@if (ViewData.ModelState.ErrorCount > 0)
{
	<div class="alert alert-danger">
		<ul>
			@foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
			{
				<li>@error.ErrorMessage</li>
			}
		</ul>
	</div>
}

<div class="card col-md-8">
	<div class="card-header">
		<div class="card-title">Update Post</div>
	</div>
	<form method="post" enctype="multipart/form-data" asp-controller="Post" asp-action="Update" class="form-control">
		<div class="card-body">
			<input type="hidden" asp-for="PostUpdateDTO.Id" />
			<input type="hidden" asp-for="PostUpdateDTO.AuthorId" />

			<div class="form-group">
				<label asp-for="PostUpdateDTO.Title"></label>
				<input type="text" asp-for="PostUpdateDTO.Title" class="form-control" id="Title" placeholder="Title.. ">
			</div>
			<div class="form-group">
				<label asp-for="PostUpdateDTO.Content"></label>
				<textarea type="text" asp-for="PostUpdateDTO.Content" class="form-control" id="Content" placeholder="Content.. "> </textarea>
			</div>
			<div class="form-group">
				<label class="form-label">Category</label>
				<select asp-for="PostUpdateDTO.CategoryId" asp-items="@Model.Categories" class="form-select">
					<option value="" selected disabled>-- Select Category --</option>
				</select>
				<span asp-validation-for="PostUpdateDTO.CategoryId" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="PostUpdateDTO.File" class="ms-2">Post Image</label>
				<input type="file" asp-for="PostUpdateDTO.File" class="form-control border-0 shadow" />
				<span asp-validation-for="PostUpdateDTO.File" class="text-danger"></span>
			</div>
		</div>
		<div class="card-action">
			<button type="submit" class="btn btn-primary">Update Post</button>
			<a asp-controller="Post" asp-action="Index" class="btn btn-light">Back</a>
		</div>
	</form>
</div>

@section Scripts {
	<script>
		tinymce.init({
			selector: 'textarea',
			plugins: [
				// Core editing features
				'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
				// Your account includes a free trial of TinyMCE premium features
			],
			toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
			tinycomments_mode: 'embedded',
			tinycomments_author: 'Author name',
			mergetags_list: [
				{ value: 'First.Name', title: 'First Name' },
				{ value: 'Email', title: 'Email' },
			],
			ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
		});
	</script>
}